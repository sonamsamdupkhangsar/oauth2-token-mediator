server:
  port: ${SERVER_PORT}

logging:
  level:
    root: error
    me.sonam.auth: info
    org.springframework.web: info
    org.springframework.security: info
    org.springframework.security.oauth2: info
    org.springframework.boot.autoconfigure: warn

spring:
  application:
    name: token-mediator
  datasource:
    url: jdbc:postgresql://${POSTGRES_SERVICE}/${POSTGRES_DBNAME}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${ISSUER_URL}
eureka:
  client:
    enabled: ${EUREKA_CLIENT_ENABLED}
    serviceUrl:
      defaultZone: ${DEFAULT_ZONE}

issuerUrl: ${ISSUER_URL}

authorization:
  root: ${ISSUER_URL}
  path: /oauth2/authorize
token:
  root: ${ISSUER_URL}
  path: /oauth2/token

permitpath:
  - path: /token-mediator/oauth/authorize
    httpMethods: GET
  - path: /token-mediator/oauth/token

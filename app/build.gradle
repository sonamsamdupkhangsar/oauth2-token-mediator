/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java-library'
    id 'maven-publish'
    id "de.undercouch.download" version "5.3.0" //new relic agent download local
}

group = 'me.sonam.auth'
version = '1.0'
description = 'token-mediator'
java.sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven {
        url = uri("https://maven.pkg.github.com/sonamsamdupkhangsar/token-filter")
        credentials {
            username = System.getenv("USERNAME")
            password = System.getenv("PERSONAL_ACCESS_TOKEN")
        }
    }
}
ext {
    set('springCloudVersion', "2022.0.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client-all:3.0.3'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'me.sonam:token-filter:1.0.1-SNAPSHOT'
    implementation 'io.r2dbc:r2dbc-postgresql:0.8.13.RELEASE'
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.6'
    implementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.r2dbc:r2dbc-h2:1.0.0.RELEASE'
    testImplementation 'com.h2database:h2:2.1.214'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.0.1'
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}

tasks.named('test', Test) {
    useJUnitPlatform()

    maxHeapSize = '1G'

    testLogging {
        events "passed"
    }
}

test {
    filter {
        //include all tests from package
        includeTestsMatching "me.sonam.auth"

        //include all integration tests
        includeTestsMatching "*Test*"
    }
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/sonamsamdupkhangsar/token-mediator"
            credentials {
                username = System.getenv("USERNAME")
                password = System.getenv("PERSONAL_ACCESS_TOKEN")
            }
        }
    }
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

task downloadNewrelic(type: Download) {
    mkdir 'newrelic'
    src 'https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip'
    dest file('newrelic')
}

task unzipNewrelic(type: Copy) {
    from zipTree(file('newrelic/newrelic-java.zip'))
    into rootDir
}